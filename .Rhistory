+ cooperative + nonprofit + other + private
+ cluster(sector),
data = data)
fit.6$frail
data.frame(fit.6$frail)
2%2
2 mod 2
2 %% 2
3 %% 2
1 %% 2
4 %% 2
dim(frailty.df)
# Check the proportional hazards assumption by including the log of the
# empirical Bayes frailty estimates
# First, add a column to the data which indicates the log frailty
frailty.df <- fit.6$frail
dim(frailty.df)
length(frailty.df)
# Check the proportional hazards assumption by including the log of the
# empirical Bayes frailty estimates
# First, add a column to the data which indicates the log frailty
frailty.df <- as.data.frame(fit.6$frail)
frailty.f
frailty.df
dim(frailty.df)
1:20 %% 2
rownames <- frailty.df[1:dim(frailty.df)[1] %% 2,]
rownames
frailty.df <- as.data.frame(fit.6$frail)
rownames <- frailty.df[!1:dim(frailty.df)[1] %% 2,]
rownames
frialty.df
frailty.df
frailty.df[1:20 %% 2]
frailty.df[1:20 %% 2,]
frailty.df[1:20 %% 3,]
frailty.df[1:20 %% 2,]
frailty.df[as.logical(1:20 %% 2a),]
frailty.df[as.logical(1:20 %% 2),]
frailty.df[c(TRUE, FALSE), ]
frailty.df
names(frailty.df)
rownames(frailty.df)
?merge
merge(data, frailty.df, by.x="sector", by.y="row.names")
data <- merge(data, frailty.df, by.x="sector", by.y="row.names")
View(data)
colnames(data)
table(data$`fit.6$frail`)
table(fit.6$frail)
names(data)[names(data) == "fit.6$frail"] <- "frialty"
names(data)
frailty.df <- as.data.frame(fit.6$frail)
data <- merge(data, frailty.df, by.x="sector", by.y="row.names")
names(data)[names(data) == "fit.6$frail"] <- "frailty"
names(data)
fit.ph.check <- coxph(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private
+ frailty,
data = data)
fit.ph.check
cox.zph(fit.ph.check)
qr
qr(data[, c("cooperative", "nonprofit", "other")])
qr(data[, c("cooperative", "nonprofit", "other")])$rank
qr(data[, c("size_small", "size_large", "size_v_large")])$rank
qr(data[, c("size_small", "size_large", "size_large")])$rank
qr(data[, c("cooperative", "nonprofit", "other", "private")])$rank
qr(data[, c("trunc_tax", "trunc_EBITDA")])$rank
# Check the rank of the data
qr(data[, c(
"log_current_liabilities_by_total_liabilities",
"trunc_tax",
"log_cash_by_current_liabilities",
"size_small",
"size_large",
"size_v_large",
"trunc_EBITDA",
"cooperative",
"nonprofit",
"other",
"private",
"frailty"
)])$rank
table(data$size_v_large)
table(data$other)
table(data$nonprofit)
fit.ph.check <- coxph(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large # + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private
+ frailty,
data = data)
cox.zph(fit.ph.check)
fit.ph.check <- coxph(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
# + log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private
+ frailty,
data = data)
cox.zph(fit.ph.check)
fit.ph.check <- coxph(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
# + trunc_EBITDA
+ cooperative + nonprofit + other + private
+ frailty,
data = data)
cox.zph(fit.ph.check)
cor(data$trunc_tax, trunc_ETBIDA)
cor(data$trunc_tax, trunc_EBITDA)
cor(data$trunc_tax, data$trunc_EBITDA)
# Correlation plot
cor.mat <- cor(matrix(c(
data$log_cash_by_total_assets,
data$log_cash_by_current_liabilities,
data$log_current_assets_by_current_liabilities,
data$trunc_tax,
data$trunc_EBITDA,
data$trunc_roa,
data$trunc_financial_expenses_by_total_assets,
data$trunc_EBIT,
data$log_current_liabilities_by_total_liabilities,
data$trunc_working_capital_by_total_assets,
data$log_income_tax_by_total_assets,
data$log_n_employees), nrow=28135)
)
cor.mat <- round(cor.mat, 4)
cor.mat <- as.data.frame(cor.mat)
rownames(cor.mat) <- c(
"1 log_cash_by_total_assets",
"2 log_cash_by_current_liabilities",
"3 log_current_assets_by_current_liabilities",
"4 trunc_tax",
"5 trunc_EBITDA",
"6 trunc_roa",
"7 trunc_financial_expenses_by_total_assets",
"8 trunc_EBIT",
"9 log_current_liabilities_by_total_liabilities",
"10 trunc_working_capital_by_total_assets",
"11 log_income_tax_by_total_assets",
"12 log_n_employees"
)
colnames(cor.mat) <- c(
"1",
"2",
"3",
"4",
"5",
"6",
"7",
"8",
"9",
"10",
"11",
"12"
)
cor.mat
cox.zph(fit.ph.check)
# log_cash_by_current_liabilities               6.973  1 0.0083
# size_small                                    4.325  1 0.0376
# size_large                                    4.169  1 0.0412
# size_v_large                                  0.258  1 0.6115
# cooperative                                   3.080  1 0.0792
# nonprofit                                     0.267  1 0.6055
# other                                         2.155  1 0.1421
# private                                       7.699  1 0.0055
# frailty                                       0.517  1 0.4721
# GLOBAL                                       24.393 11 0.0112
plot(ph.check)
ph.check <- cox.zph(fit.ph.check)
# log_cash_by_current_liabilities               6.973  1 0.0083
# size_small                                    4.325  1 0.0376
# size_large                                    4.169  1 0.0412
# size_v_large                                  0.258  1 0.6115
# cooperative                                   3.080  1 0.0792
# nonprofit                                     0.267  1 0.6055
# other                                         2.155  1 0.1421
# private                                       7.699  1 0.0055
# frailty                                       0.517  1 0.4721
# GLOBAL                                       24.393 11 0.0112
plot(ph.check)
table(data$cooperative)
par(mfrow=c(1, 11))
plot(ph.check)
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500, height = 1500 * 6, res = 400)
par(mfrow=c(2, 6))
par(mar=c(3, 3, 3, 3))
par(family="Times")
plot(ph.check)
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 6, res = 400)
par(mfrow=c(2, 6))
par(mar=c(3, 3, 3, 3))
par(family="Times")
plot(ph.check)
dev.off()
# GLOBAL                                       24.393 11 0.0112
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 6, res = 400)
par(mfrow=c(6, 2))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check)
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 4, height = 1500 * 6, res = 400)
par(mfrow=c(4, 4))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check)
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 4, height = 1500 * 6, res = 300)
par(mfrow=c(4, 4))
par(mar=c(3, 3, 3, 3))
par(family="Times")
plot(ph.check)
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 4, height = 1500 * 6, res = 300)
par(mfrow=c(4, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check)
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(4, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check)
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check)
dev.off()
?plot
library(scales)
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col=alpha("black", 0.5))
dev.off()
library(scales)
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col=alpha("black", 0.1))
dev.off()
library(scales)
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col=alpha("black", 0.9))
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col=rgb(1, 1, 1, 0.8))
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500 * 2, height = 1500 * 3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500, height = 1500 * 2/3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(5, 5, 5, 5))
par(family="Times")
plot(ph.check, col="blue")
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 1500, height = 1500 * 2/3, res = 300)
par(mfrow=c(3, 4))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2000, height = 2000 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2000, height = 2000 * 3/4, res = 400)
par(mfrow=c(3, 4))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 400)
par(mfrow=c(3, 4))
par(mar=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
# GLOBAL                                       24.393 11 0.0112
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 400)
par(mfrow=c(3, 4))
par(mar=c(2, 2, 2, 2))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(2, 2, 2, 2))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(3, 3, 3, 3))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(3, 3, 3, 3))
par(oma=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(4, 4, 4, 4))
par(oma=c(1, 1, 1, 1))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(4, 4, 4, 4))
par(oma=c(0, 0, 0, 0))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = 2500, height = 2500 * 3/4, res = 400)
par(mfrow=c(3, 4))
par(mar=c(4, 4, 4, 4))
par(oma=c(0, 0, 0, 0))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin, inner_margin, inner_margin, inner_margin))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin, inner_margin+1, inner_margin, inner_margin))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin, inner_margin+1, inner_margin, inner_margin))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin-1))
?cox.zph
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin-3, inner_margin+1, inner_margin-3, inner_margin-3))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin-2, inner_margin+1, inner_margin-3, inner_margin-2))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
# Check the proportional hazards assumption by including the log of the
# empirical Bayes frailty estimates
# First, add a column to the data which indicates the log frailty
frailty.df <- as.data.frame(fit.6$frail)
data <- merge(data, frailty.df, by.x="sector", by.y="row.names")
names(data)[names(data) == "fit.6$frail"] <- "frailty"
# Error: the system is computationally singular. The matrix of covariates
# of the final model is full rank, though. We will exclude trunc_EBITDA to
# circumvent this problem, but it is not a proper solution.
fit.ph.check <- coxph(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
# + trunc_EBITDA
+ cooperative + nonprofit + other + private
+ frailty,
data = data)
ph.check <- cox.zph(fit.ph.check, transform="identity")
ph.check
# log_cash_by_current_liabilities               6.973  1 0.0083
# size_small                                    4.325  1 0.0376
# size_large                                    4.169  1 0.0412
# size_v_large                                  0.258  1 0.6115
# cooperative                                   3.080  1 0.0792
# nonprofit                                     0.267  1 0.6055
# other                                         2.155  1 0.1421
# private                                       7.699  1 0.0055
# frailty                                       0.517  1 0.4721
# GLOBAL                                       24.393 11 0.0112
outer_margin = 0
inner_margin = 3
fig_size = 3000
jpeg(file = "visualizations/schoenfeld_plot.jpeg",
width = fig_size, height = fig_size * 3/4, res = 300)
par(mfrow=c(3, 4))
par(mar=c(inner_margin-1, inner_margin+1, inner_margin-1, inner_margin-2))
par(oma=c(outer_margin, outer_margin, outer_margin, outer_margin))
par(family="Times")
plot(ph.check, col="blue")
dev.off()
ph.check
# Parametric shared frailty model
select.parfm(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private,
data = datacluster="sector")
# Parametric shared frailty model
select.parfm(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private,
data = data, cluster="sector")
# Parametric shared frailty model
select.parfm(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
# + trunc_EBITDA
+ cooperative + nonprofit + other + private,
data = data, cluster="sector")
# Parametric shared frailty model
select.parfm(Surv(years_to_event, censor) ~
log_current_liabilities_by_total_liabilities
+ trunc_tax
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ trunc_EBITDA
+ cooperative + nonprofit + other + private,
data = data, cluster=sector)
