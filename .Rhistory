par(mfrow=c(2, 2))
par(mar=c(2, 2, 2, 2))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="Histogram of current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="Histogram of log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="Boxplot of current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="Boxplot of log(current_assets_by_current_liabilities)")
dev.off()
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 2500, height = 2000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(3, 3, 3, 3))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="Histogram of current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="Histogram of log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="Boxplot of current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="Boxplot of log(current_assets_by_current_liabilities)")
dev.off()
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(3, 3, 3, 3))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="Histogram of current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="Histogram of log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="Boxplot of current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="Boxplot of log(current_assets_by_current_liabilities)")
dev.off()
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(2, 2, 2, 2))
hist(data$cash_by_current_liabilities, breaks=50)
hist(data$log_cash_by_current_liabilities, breaks=50)
boxplot(data$cash_by_current_liabilities)
boxplot(data$log_cash_by_current_liabilities)
dev.off()
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(3, 3, 3, 3))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="Histogram of current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="Histogram of log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="Boxplot of current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="Boxplot of log(current_assets_by_current_liabilities)")
dev.off()
jpeg(file = "visualizations/cash_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(2, 2, 2, 2))
hist(data$cash_by_current_liabilities, breaks=50)
hist(data$log_cash_by_current_liabilities, breaks=50)
boxplot(data$cash_by_current_liabilities)
boxplot(data$log_cash_by_current_liabilities)
dev.off()
# cash_by_total_assets
jpeg(file = "visualizations/cash_by_total_assets.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
hist(data$cash_by_total_assets, breaks=50)
hist(data$log_cash_by_total_assets, breaks=50)
boxplot(data$cash_by_total_assets)
boxplot(data$log_cash_by_total_assets)
dev.off()
# cash_by_total_assets
jpeg(file = "visualizations/cash_by_total_assets.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
hist(data$cash_by_total_assets, breaks=50,
main="cash_by_total_assets")
hist(data$log_cash_by_total_assets, breaks=50,
main="log(cash_by_total_assets)")
boxplot(data$cash_by_total_assets,
main="cash_by_total_assets")
boxplot(data$log_cash_by_total_assets,
main="log(cash_by_total_assets)")
dev.off()
# cash_by_current_liabilities
jpeg(file = "visualizations/cash_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(2, 2, 2, 2))
hist(data$cash_by_current_liabilities, breaks=50,
main="cash_by_current_liabilities")
hist(data$log_cash_by_current_liabilities, breaks=50,
main="log(cash_by_current_liabilities)")
boxplot(data$cash_by_current_liabilities,
main="cash_by_current_liabilities")
boxplot(data$log_cash_by_current_liabilities,
main="log(cash_by_current_liabilities)")
dev.off()
# current_assets_by_current_liabilities
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(3, 3, 3, 3))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="log(current_assets_by_current_liabilities)")
dev.off()
# cash_by_total_assets
jpeg(file = "visualizations/cash_by_total_assets.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
hist(data$cash_by_total_assets, breaks=50,
main="cash_by_total_assets")
hist(data$log_cash_by_total_assets, breaks=50,
main="truncated log(cash_by_total_assets)")
boxplot(data$cash_by_total_assets,
main="cash_by_total_assets")
boxplot(data$log_cash_by_total_assets,
main="truncated log(cash_by_total_assets)")
dev.off()
# cash_by_current_liabilities
jpeg(file = "visualizations/cash_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(2, 2, 2, 2))
hist(data$cash_by_current_liabilities, breaks=50,
main="cash_by_current_liabilities")
hist(data$log_cash_by_current_liabilities, breaks=50,
main="truncated log(cash_by_current_liabilities)")
boxplot(data$cash_by_current_liabilities,
main="cash_by_current_liabilities")
boxplot(data$log_cash_by_current_liabilities,
main="truncated log(cash_by_current_liabilities)")
dev.off()
# current_assets_by_current_liabilities
jpeg(file = "visualizations/current_assets_by_current_liabilities.jpeg",
width = 3000, height = 3000, res = 300)
par(mfrow=c(2, 2))
par(mar=c(3, 3, 3, 3))
hist(data$current_assets_by_current_liabilities, breaks=50,
main="current_assets_by_current_liabilities")
hist(data$log_current_assets_by_current_liabilities, breaks=50,
main="log(current_assets_by_current_liabilities)")
boxplot(data$current_assets_by_current_liabilities,
main="current_assets_by_current_liabilities")
boxplot(data$log_current_assets_by_current_liabilities,
main="log(current_assets_by_current_liabilities)")
dev.off()
hist(data$EBITDA)
scatter(data$EBITDA)
plot(data$EBITDA)
fit$frail
summary(fit)
fit$frail
var(fit$frail)
sqrt(var(fit$frail)a))
sqrt(var(fit$fraila))
sqrt(var(fit$frail))
summary(fit)
summary(fit, type="cumhaz")
type(fit)
typeof(fit)
cumsum
cumsum(fit$hazard)
plot(fit)
predict(fit, c(1, 1))
predict(fit, df(1, 1))
autoplot(fit1, type="hist")
autoplot(fit, type="hist")
autoplot(fit1, type="hr", lp=c(0, 1))
autoplot(fit, type="hr", lp=c(0, 1))
autoplot(fit, type="pred", lp=c(0))
residuals(fit, type="cluster")
plot(residuals(fit, type="cluster"))
plot(residuals(fit, type="cluster")$individual)
plot(residuals(fit, type="cluster")$individual)
data.frame(c(0, 0), c(1, 1))
fit
hist(data$log_current_assets_by_current_liabilities)
hist(data$log_cash_by_current_liabilities)
hist(data$log_cash_by_total_assets)
hist(data$tax)
hist(data$financial_expenses_by_total_assets
)
hist(data$EBITDA)
hist(data$income_tax_by_total_assets)
hist(data$transf_total_liabilities_by_net_assets)
plot(fit, type="pred", newdata=data.frame(new_data_1, new_data_2))
new_data_1 <- c(
1,     # log_current_assets_by_current_liabilities
0,     # cooperative
0,     # nonprofit
0,     # other
0,     # private
-8,    # log_cash_by_current_liabilities
0,     # size_small
0,     # size_large
0,     # size_v_large
-10,   # log_cash_by_total_assets
10000, # tax
0.1,   # financial_expenses_by_total_assets
0,     # EBITDA
0,     # income_tax_by_total_assets
0      # transf_total_liabilities_by_net_assets
)
new_data_2 <- c(
1,     # log_current_assets_by_current_liabilities
1,     # cooperative
0,     # nonprofit
0,     # other
0,     # private
-8,    # log_cash_by_current_liabilities
0,     # size_small
0,     # size_large
0,     # size_v_large
-10,   # log_cash_by_total_assets
10000, # tax
0.1,   # financial_expenses_by_total_assets
0,     # EBITDA
0,     # income_tax_by_total_assets
0      # transf_total_liabilities_by_net_assets
)
plot(fit, type="pred", newdata=data.frame(new_data_1, new_data_2))
plot(fit, type="pred", lp=new_data_1)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz" lp=new_data_1)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz", lp=new_data_1)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz", newdata=new_data_1)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
newdata=data.frame(new_data_1, new_data_2))
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
lm=new_data_1, new_data_2)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
lp=new_data_1, new_data_2)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
lp=new_data_1)
cum_haz
?t
# --- Other things
# Plot log cumulative hazard
new_data <- data.frame(
log_current_assets_by_current_liabilities   = c(1, 1),
cooperative                                 = c(0, 1),
nonprofit                                   = c(0, 0),
other                                       = c(0, 0),
private                                     = c(0, 0),
log_cash_by_current_liabilities             = c(-8, -8),
size_small                                  = c(0, 0),
size_large                                  = c(0, 0),
size_v_large                                = c(0, 0),
log_cash_by_total_assets                    = c(-10, -10),
tax                                         = c(10000, 10000),
financial_expenses_by_total_assets          = c(0.1, 0.1),
EBITDA                                      = c(0, 0),
income_tax_by_total_assets                  = c(0, 0),
transf_total_liabilities_by_net_assets      = c(0, 0)
)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
newdata=new_data)
cum_haz[1]
cum_haz[1]["camhaz"]
cum_haz[1]["cumhaz"]
cum_haz[1]$cumhaz
colnames(cum_haz[1])
cum_haz[1]
cum_haz[[1]
]
cum_haz[[1]]$cumhaz
plot(cum_haz[[1]]$cumhaz)
cum_haz_df = data.frame()
for (i in length(cum_haz)) {
cum_haz_df <- rbind(cum_haz_df, cum_haz[[i]]$cumhaz)
}
cum_haz_df = data.frame()
for (i in length(cum_haz)) {
cum_haz_df <- cbind(cum_haz_df, cum_haz[[i]]$cumhaz)
}
for (i in length(cum_haz)) {
plot(cum_haz[[i]]$cumhaz)
}
for (i in length(cum_haz)) {
plot(cum_haz[[i]]$cumhaz)
}
for (i in length(cum_haz)) {
print(i)
plot(cum_haz[[i]]$cumhaz)
}
for (i in 1:length(cum_haz)) {
print(i)
plot(cum_haz[[i]]$cumhaz)
}
for (i in 1:length(cum_haz)) {
print(i)
plot(cum_haz[[i]]$cumhaz)
}
for (i in 1:length(cum_haz)) {
print(i)
plot(cum_haz[[i]]$cumhaz, col=i)
}
for (i in 1:length(cum_haz)) {
print(i)
lines(cum_haz[[i]]$cumhaz, col=i)
}
for (i in 1:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i)
}
for (i in 1:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i)
}
plot.new()
for (i in 1:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i)
}
lines(cum_haz[[1]]$cumhaz, col=1)
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i)
}
plot(cum_haz[[1]]$cumhaz, col=1)
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i)
}
dev.off()
plot(cum_haz[[1]]$cumhaz, col=1, lty=1)
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i, lty=1)
}
dev.off()
plot(cum_haz[[1]]$cumhaz, col=1, lty=1)
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i, lty=1)
}
plot(cum_haz[[1]]$cumhaz, col=1, lty=1)
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i, lty=1)
}
plot(cum_haz[[1]]$cumhaz, col=1, type='S')
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i, lty=1)
}
plot(cum_haz[[1]]$cumhaz, col=1, type="S", ylim=(0, 1))
plot(cum_haz[[1]]$cumhaz, col=1, type="S", ylim=c(0, 1))
for (i in 2:length(cum_haz)) {
lines(cum_haz[[i]]$cumhaz, col=i, type="S")
}
plot(log(cum_haz[[1]]$cumhaz), col=1, type="S", ylim=c(0, 1))
plot(log(cum_haz[[1]]$cumhaz), col=1, type="S", ylim=c(0, 1))
for (i in 2:length(cum_haz)) {
lines(log(cum_haz[[i]]$cumhaz), col=i, type="S")
}
log(cum_haz[[1]]$cumhaz)
plot(log(cum_haz[[1]]$cumhaz), col=1, type="S", ylim=c(-10, 1))
for (i in 2:length(cum_haz)) {
lines(log(cum_haz[[i]]$cumhaz), col=i, type="S")
}
# --- Other things
# Plot log cumulative hazard
new_data <- data.frame(
log_current_assets_by_current_liabilities   = c(1,     1,     1,       1      ),
cooperative                                 = c(0,     1,     1,       1      ),
nonprofit                                   = c(0,     0,     0,       0      ),
other                                       = c(0,     0,     0,       0      ),
private                                     = c(0,     0,     0,       0      ),
log_cash_by_current_liabilities             = c(-8,   -8,    -8,      -8      ),
size_small                                  = c(0,     0,     0,       0      ),
size_large                                  = c(0,     0,     0,       0      ),
size_v_large                                = c(0,     0,     0,       0      ),
log_cash_by_total_assets                    = c(-10,  -10,   -10,     -10     ),
tax                                         = c(10000, 10000, 10000,   10000  ),
financial_expenses_by_total_assets          = c(0.1,   0.1,   0.1,     0.1    ),
EBITDA                                      = c(0,     0,     0,       0      ),
income_tax_by_total_assets                  = c(0,     0,     0,       0      ),
transf_total_liabilities_by_net_assets      = c(0,     0,     0,       0      )
)
# --- Other things
# Plot log cumulative hazard
new_data <- data.frame(
log_current_assets_by_current_liabilities   = c(1,     1,     1,      1,      1      ),
cooperative                                 = c(0,     1,     0,      0,      1      ),
nonprofit                                   = c(0,     0,     1,      0,      0      ),
other                                       = c(0,     0,     0,      1,      0      ),
private                                     = c(0,     0,     0,      0,      1      ),
log_cash_by_current_liabilities             = c(-8,   -8,    -8,     -8,     -8      ),
size_small                                  = c(0,     0,     0,      0,      0      ),
size_large                                  = c(0,     0,     0,      0,      0      ),
size_v_large                                = c(0,     0,     0,      0,      0      ),
log_cash_by_total_assets                    = c(-10,  -10,   -10,    -10,    -10     ),
tax                                         = c(10000, 10000, 10000,  10000,  10000  ),
financial_expenses_by_total_assets          = c(0.1,   0.1,   0.1,    0.1,    0.1    ),
EBITDA                                      = c(0,     0,     0,      0,      0      ),
income_tax_by_total_assets                  = c(0,     0,     0,      0,      0      ),
transf_total_liabilities_by_net_assets      = c(0,     0,     0,      0,      0      )
)
cum_haz <- predict(fit, type="conditional", quantity="cumhaz",
newdata=new_data)
plot(log(cum_haz[[1]]$cumhaz), col=1, type="S", ylim=c(-10, 1))
for (i in 2:length(cum_haz)) {
lines(log(cum_haz[[i]]$cumhaz), col=i, type="S")
}
new_data
# Are the results much more different when using the penalized partial
# likelihood instead of the marginal likelihood?
fit.marginal <- cox.ph(Surv(years_to_event, censor) ~
log_current_assets_by_current_liabilities
+ cooperative + nonprofit + other + private
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ log_cash_by_total_assets
+ tax
+ financial_expenses_by_total_assets
+ EBITDA
+ income_tax_by_total_assets
+ transf_total_liabilities_by_net_assets
+ cluster(sector),
data = data)
# Are the results much more different when using the penalized partial
# likelihood instead of the marginal likelihood?
fit.marginal <- cox.phz(Surv(years_to_event, censor) ~
log_current_assets_by_current_liabilities
+ cooperative + nonprofit + other + private
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ log_cash_by_total_assets
+ tax
+ financial_expenses_by_total_assets
+ EBITDA
+ income_tax_by_total_assets
+ transf_total_liabilities_by_net_assets
+ cluster(sector),
data = data)
# Are the results much more different when using the penalized partial
# likelihood instead of the marginal likelihood?
fit.marginal <- coxph(Surv(years_to_event, censor) ~
log_current_assets_by_current_liabilities
+ cooperative + nonprofit + other + private
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ log_cash_by_total_assets
+ tax
+ financial_expenses_by_total_assets
+ EBITDA
+ income_tax_by_total_assets
+ transf_total_liabilities_by_net_assets
+ cluster(sector),
data = data)
fit.marginal
fit$zaph
fit$zph
fit
str(fit)
# --- Other things
fitrail(Surv(years_to_event, censor) ~
log_current_assets_by_current_liabilities
+ cooperative + nonprofit + other + private
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ log_cash_by_total_assets
+ tax
+ financial_expenses_by_total_assets
+ EBITDA
+ income_tax_by_total_assets
+ transf_total_liabilities_by_net_assets
+ cluster(sector),
data, frailty="gamma", fitmethod="loglik")
# --- Other things
fitfrail(Surv(years_to_event, censor) ~
log_current_assets_by_current_liabilities
+ cooperative + nonprofit + other + private
+ log_cash_by_current_liabilities
+ size_small + size_large + size_v_large
+ log_cash_by_total_assets
+ tax
+ financial_expenses_by_total_assets
+ EBITDA
+ income_tax_by_total_assets
+ transf_total_liabilities_by_net_assets
+ cluster(sector),
data, frailty="gamma", fitmethod="loglik")
table(data$years_to_event)
table(data$censor)
update.packages()
y
y
y
y
y
y
update.packages(ask=F)
sessionInfo()
# --- Other things
# Install an older version of frailtysurv
packageurl <- "https://cran.r-project.org/src/contrib/Archive/frailtySurv/frailtySurv_1.3.6.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
library(frailtySurv)
sessionInfo()
# --- Other things
# Install an older version of frailtysurv
packageurl <- "https://cran.r-project.org/src/contrib/Archive/frailtySurv/frailtySurv_1.3.5.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("colorout")
require
require(remotes)
install_version(package = "frailtySurv", version = "1.3.6", repos = "http://cran.us.r-project.org")
